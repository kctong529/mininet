name: mininet-tests

on: [push, pull_request]

jobs:
  test:
    name: Mininet Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]

    steps:
      - name: Check out Mininet source
        uses: actions/checkout@v4

      - name: Install Python 3 and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip help2man openvswitch-switch openvswitch-common

      - name: Install Mininet and base dependencies
        run: |
          PYTHON=python3
          sudo env PYTHON=$PYTHON make install

      - name: Verify Mininet installation
        run: |
          # Activate the virtual environment if it exists
          if [ -d "mininet-venv" ]; then
            source mininet-venv/bin/activate
          fi

          # Verify mn command is available
          which mn || (echo "mn command not found!" && exit 1)

      - name: Disable slow udevd
        run: |
          sudo systemctl stop systemd-udevd || true
          sudo systemctl stop systemd-udevd-kernel.socket || true
          sudo systemctl stop systemd-udevd-control.socket || true

      - name: Sanity test
        run: |
          if [ -d "mininet-venv" ]; then
            source mininet-venv/bin/activate
          fi

          sudo env PATH=$PATH mn --test pingall

      - name: Clone OpenFlow from public repo
        uses: actions/checkout@v4
        with:
          repository: kctong529/openflow
          path: openflow

      - name: List directories to verify checkouts
        run: |
          echo "Main Repo:"
          ls -l
          cd openflow
          echo "In openflow:"
          ls -l

      - name: Generate build configuration
        run: |
          cd openflow
          echo "::notice::Generating build configuration..."
          if ./boot.sh; then
            echo "::notice::Build configuration generated."
          else
            echo "::error::Failed to generate build configuration."
            exit 1
          fi

      - name: Configure build system
        run: |
          cd openflow
          echo "::notice::Configuring build system..."
          if ./configure; then
            echo "::notice::Build system configured."
          else
            echo "::error::Failed to configure build system."
            exit 1
          fi

      - name: Compile OpenFlow
        run: |
          cd openflow
          echo "::notice::Compiling OpenFlow (this may take a few minutes)..."
          cpu_cores=$(nproc)
          echo "::notice::Using $cpu_cores CPU cores for parallel compilation."
          
          if make -j"$cpu_cores"; then
            echo "::notice::OpenFlow compilation completed."
          else
            echo "::error::OpenFlow compilation failed."
            exit 1
          fi

      - name: Install OpenFlow binaries
        run: |
          cd openflow
          echo "::notice::Installing OpenFlow binaries..."
          if sudo make install; then
            echo "::notice::OpenFlow binaries installed."
          else
            echo "::error::Failed to install OpenFlow binaries."
            exit 1
          fi

      - name: Install test dependencies
        run: |
          sudo apt-get install -y vlan
          sudo python3 -m pip install pexpect

      - name: Run core tests
        run: |
          export PYTHON=python3
          $sudo env PATH=$PATH $PYTHON mininet/test/runner.py -v

      - name: Run examples tests
        run: |
          export PYTHON=python3
          $sudo env PATH=$PATH $PYTHON examples/test/runner.py -v
